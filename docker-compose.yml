version: "3.7"

x-cache-from:
  - &server-cache-from
    cache_from:
      - ${NGINX_IMAGE:-nginx:1.19}
      - ${PHP_IMAGE:-php:7.4.7-fpm-buster}
services:
  server:
    build:
      context: ./server
      target: server_nginx
      dockerfile: ./prod.Dockerfile
      <<: *server-cache-from
    image: ${NGINX_IMAGE:-nginx-1.19}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./server/public:/var/www/html/public:ro
      - ./server/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    networks:
      - httpd
  api:
    build:
      context: ./server
      target: server_php
      dockerfile: ./prod.Dockerfile
      <<: *server-cache-from
    container_name: api
    restart: on-failure
    image: ${PHP_IMAGE:-php:7.4.7-fpm-buster}
    depends_on:
      - db
      - dev-tls
    volumes:
      - ./server:/var/www/html
      - dev-certs:/var/www/certs
    networks:
      - httpd
      - dbnetwork
  db:
    image: mysql:8.0
    container_name: db
    environment:
      - MYSQL_ROOT_PASSWORD=!ChangeMe!
      - MYSQL_DATABASE=shopping_list
      - MYSQL_USER=shopping_list
      - MYSQL_PASSWORD=shopping_list
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - dbnetwork

  dev-tls:
    build:
      context: ./server
      <<: *server-cache-from
      target: dev-certs
    volumes:
      - dev-certs:/certs


volumes:
  db-data:
  dev-certs:
networks:
  httpd:
  dbnetwork:




