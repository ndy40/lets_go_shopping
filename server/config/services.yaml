# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    container.dumper.inline_factories: true
    app.email.sender: '%env(resolve:APP_SENDER_EMAIL)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Data Transformers
    App\DataTransformer\SignUpDataTransformer:
    App\DataTransformer\ChangePasswordDataTransformer:
    App\Services\SendWelcomeEmailService:
        arguments:
            - '@mailer.mailer'
            - '@twig'
            - '@logger'
            - '@request_stack'
            - '%app.email.sender%'
            - '%app.app_url%'

    # Event Listeners and  Subscribers
    App\Listeners\UserCreateEventListener:
        tags:
            - { name: doctrine.event_subscriber }
    App\Listeners\EventDispatcherKernelEvent:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    # Custom Event Listeners
    App\Listeners\UserRegisterEventListener:
        tags:
            - { name: kernel.event_listener , event: user.register, method: onUserRegisterEvent }
